package trainReservation.service;

import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

import trainReservation.dto.GetTrainListDto;
import trainReservation.entity.Cost;
import trainReservation.entity.Seat;
import trainReservation.entity.StopStation;
import trainReservation.entity.Train;

public class ReservationService {
	
	private static List<Train> trains = new ArrayList<Train>();
	private static List<Cost> costs = new ArrayList<Cost>();

	public List<Train> getPossibleTrainList(GetTrainListDto dto) {
		List<Train> possibleTrains = new ArrayList<>();
		
		for (Train train : trains) {
			
			List<StopStation> stopStations = train.getStopStations();
			int sameStationIndex = -1;
			
			for (int stopStationIndex = 0; stopStationIndex < stopStations.size(); stopStationIndex++) {
				String stopStationName = stopStations.get(stopStationIndex).getStationName();
				
				if (!dto.isEqualDepartureStation(stopStationName)) continue;
				
					
				LocalTime stationDepartureTime = LocalTime.parse(dto.getDepartureTime(), timeFormatter);
				
				if (stationDepartureTime.isBefore(departureTime)) break;
				
				
				sameStationIndex = stopStationIndex;
				break;
				
			}
			
			if (sameStationIndex == -1) continue;
			
			
			boolean isPossible = false;
			
			
			for (int stopStationIndex = 0; stopStationIndex < stopStations.size(); stopStationIndex++) {
				String stationName = stopStations.get(stopStationIndex).getStationName();
				
				if (!dto.isEqualArrivalStation(stationName)) continue;
				
				
				if (stopStationIndex <= sameStationIndex) break;
				
				
				isPossible = true;
				break;
			}
			
			if (!isPossible) continue;
			
			
			List<Seat> seats = train.getSeats();
			
			int possibleSeatCount = 0;
			
			for (Seat seat : seats) {
				if (!seat.isSeatStatus()) possibleSeatCount++;
			}
			
			if (possibleSeatCount < dto.getNumberOfPeople()) continue;
			
			possibleTrains.add(train);
			
		}
	}
	
}
